<?php
  class Stru {
    // DB Stuff
    private $conn;
    private $table = "stru_db";
    private $user_table = "bpm_user";
    private $fiscal_table = "fiscal_db";
    private $input_structure = "input_structure";



    public $stru_id;
    public $master_id;
    public $stru_index;
    public $stru_name;
    public $stru_title;
    public $active;
    public $stru_note;
    public $bg_term_id;
    // Constructor with DB
    public function __construct($db) {
      $this->conn = $db;
    }
        private function current_fiscal_year() { 
                $stmt = $this->conn->prepare("SELECT `fiscal_id` as current_fiscal_year FROM $this->fiscal_table WHERE `fiscal_status`");
                $stmt->execute();

                $temp = $stmt->fetch(PDO::FETCH_ASSOC);
                 
                return $temp['current_fiscal_year'];
        }
    // Get categories
     public function stru_null()
    {

          $query = "select *, stru_id as id, master_id as master,  CONCAT (stru_title, ' ' , stru_name) as name, active as status, 
          stru_note as text , 1 as type FROM $this->table WHERE master_id = stru_id AND bg_term_id = ? ORDER BY stru_index";



        $stmt = $this->conn->prepare($query);
        $stmt->bindParam(1, $this->current_fiscal_year());
        $stmt->execute();
        return  $stmt;
    }
    
  public function stru_master($master_id,$mother_row)
    {
      $query = "select *, stru_id as id, master_id as master,  CONCAT (stru_title, ' ' , stru_name) as name, active as status, 
                stru_note as text , 1 as type FROM $this->table 
                WHERE master_id = ? AND master_id <> stru_id AND bg_term_id = ? ORDER BY stru_index";

        $stmt = $this->conn->prepare($query);
        $stmt->bindParam(1, $master_id);
        $stmt->bindParam(2, $this->current_fiscal_year());
        $stmt->execute();
        
        //ผลิตลูกไว้ติดกับแม่
         $child_array = array();
          while($child_row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $child_child_row =  $this->stru_master($child_row['id'],$child_row);   
             //ผลิตหลานแปะติดกับลูก
             array_push($child_array, $child_child_row);
          }


        //select user จาก Table user  และเพิ่มเข้าไป
        $query = "select *, user_id as id, user_dept as master,  
        CONCAT(`user_name`, \"  \" , `user_surname`, \" (\" , `user_email` , \")\") as name, 
        active as status, user_text as text, 2 as type FROM $this->user_table 
        WHERE user_dept = ? ORDER BY user_name";
        $stmt = $this->conn->prepare($query);
        $stmt->bindParam(1, $master_id);
        $stmt->execute();
          while($user_row = $stmt->fetch(PDO::FETCH_ASSOC)) {
             array_push($child_array, $user_row);
          }

        //แปะลูกติดกับแม่
          $mother_row['children'] = $child_array;


          return  $mother_row;
    }

    public function get_main_list($search_keywords){
      $output_array = array();

      if(empty($search_keywords)){
                $result = $this->stru_null();  
                        while($row = $result->fetch(PDO::FETCH_ASSOC)) {

                            $children =  $this->stru_master($row['id'],$row);
                            array_push($output_array, $children);
                        }
              } else {
                $output_array  = $this->search_user($search_keywords);  
              }

      return $output_array;
    }


    public function stru_master2($master_id,$mother_row)
    {
      $query = "select *, stru_id as id, master_id as master,  CONCAT (stru_title, ' ' , stru_name) as name, active as status, 
                stru_note as text , 1 as type FROM $this->table 
                WHERE master_id = ? AND master_id <> stru_id AND bg_term_id = ? ORDER BY stru_index";

        $stmt = $this->conn->prepare($query);
        $stmt->bindParam(1, $master_id);
        $stmt->bindParam(2, $this->current_fiscal_year());
        $stmt->execute();
        
        //ผลิตลูกไว้ติดกับแม่
         $child_array = array();
          while($child_row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $child_child_row =  $this->stru_master2($child_row['id'],$child_row);   
             //ผลิตหลานแปะติดกับลูก
             array_push($child_array, $child_child_row);
          }


        //select user จาก Table user  และเพิ่มเข้าไป
        $query = "select s.id as id, s.stru_id , s.dept_id , s.stru_id as master, d.dept_name , d.dept_name as name, 2 as type FROM $this->input_structure s LEFT JOIN dept_db d on s.dept_id = d.dept_id WHERE stru_id = ? ORDER BY id";
        $stmt = $this->conn->prepare($query);
        $stmt->bindParam(1, $master_id);
        $stmt->execute();
          while($dept_row = $stmt->fetch(PDO::FETCH_ASSOC)) {
             array_push($child_array, $dept_row);
          }

        //แปะลูกติดกับแม่
          $mother_row['children'] = $child_array;


          return  $mother_row;
    }

    public function get_main_list2(){
      $output_array = array();

                $result = $this->stru_null();  
                        while($row = $result->fetch(PDO::FETCH_ASSOC)) {

                            $children =  $this->stru_master2($row['id'],$row);
                            array_push($output_array, $children);
                        }
              

      return $output_array;
    }
public function get_stru_list(){
$output_array = array();
 $query = "select *, stru_id as id, master_id as master, CONCAT (stru_title, ' ' , stru_name) as name, active as status, 
                stru_note as text , 1 as type FROM $this->table 
                WHERE bg_term_id = ? ORDER BY TRIM(stru_title),TRIM(stru_name)";

        $stmt = $this->conn->prepare($query);
        $stmt->bindParam(1, $this->current_fiscal_year());
        $stmt->execute();

        $nullRow = array("id"=>NULL,"master"=>NULL,"name"=>"กรุณาเลือกโครงสร้าง","status"=>1,"text"=>"","type"=>1,"bg_term_id"=>$this->current_fiscal_year());

        array_push($output_array, $nullRow);
        while($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
             array_push($output_array, $row);
          }
       
          $result = array(
                            'strudata' => $output_array,
                            'current_fiscal_year' => $this->current_fiscal_year()
                    );
    return $result;
}

public function search_user($search_txt)
    {
      if($search_txt=="admin"){
        $query = "select *, user_id as id, user_stru as master,  
        CONCAT(`user_name`, \"  \" , `user_surname`, \" (\" , `user_email` , \")\") as name, 
        active as status, user_text as text, 2 as type FROM $this->user_table 
        WHERE user_permis = 1  ORDER BY user_name";
      } else {
         $query = "select *, user_id as id, user_stru as master,  
        CONCAT(`user_name`, \"  \" , `user_surname`, \" (\" , `user_email` , \")\") as name, 
        active as status, user_text as text, 2 as type FROM $this->user_table 
        WHERE `user_name` LIKE \"%$search_txt%\" OR `user_surname` LIKE \"%$search_txt%\"  ORDER BY user_name";
      }

        $output_array = array();


        $stmt = $this->conn->prepare($query);
        $stmt->execute();
          while($user_row = $stmt->fetch(PDO::FETCH_ASSOC)) {
             array_push($output_array, $user_row);
          }
          return $output_array;
    }



 public function save_stru($saveMode)
    {


                if($saveMode == 'insert'){          

                        $query = "INSERT INTO $this->table (`master_id`, `stru_index`,`stru_title`, 
                        `stru_name`, `active`, `stru_note`,`bg_term_id`,`stru_id`) 
                        VALUES (?,?,?,?,?,?,?,?)";

                } else if($saveMode == 'update') {

                        $query = "UPDATE $this->table SET `master_id`= ? ,`stru_index`= ? , `stru_title` = ?,
                        `stru_name`= ? ,`active`= ?,`stru_note`= ? , `bg_term_id` = ?
                        WHERE  `stru_id` = ? ";

                }
                        $stmt = $this->conn->prepare($query);

                                $stmt->bindParam(1, $this->master_id);
                                $stmt->bindParam(2, $this->stru_index);
                                $stmt->bindParam(3, $this->stru_title);
                                $stmt->bindParam(4, $this->stru_name);
                                $stmt->bindParam(5, $this->active);
                                $stmt->bindParam(6, $this->stru_note);
                                $stmt->bindParam(7, $this->bg_term_id);
                                $stmt->bindParam(8, $this->stru_id);
                                

                try {
                $stmt->execute();
                        //success
                        $errTxt = "บันทึกข้อมูลในฐานข้อมูลแล้ว";
                        $result = array(
                        'result' => true,
                        'error' => $errTxt,     
                    );
                }
                catch (PDOException $e) {
                        //error
                        $errTxt = "ไม่สามารถบันทึกข้อมูลในฐานข้อมูลได้: stru_table " . $e->getMessage();
                                $result = array(
                                'result' => false,
                                'error' => $errTxt,     
                        );

                }

                return $result;
        }

public function childCheck($stru_id)
    {
        $stru_query = "SELECT * FROM $this->table d
                      WHERE d.master_id = :stru_id AND d.master_id <> d.stru_id";

        $stmt = $this->conn->prepare($stru_query);
        $stmt->bindParam(':stru_id', $stru_id);
        $stmt->execute();
        $stru_am = $stmt->rowCount();

        $user_query = "SELECT * FROM $this->user_table u WHERE u.user_id = :stru_id";


        $stmt = $this->conn->prepare($user_query);
        $stmt->bindParam(':stru_id', $stru_id);
        $stmt->execute();
        $user_am = $stmt->rowCount();


        
        $user_query = "SELECT * FROM $this->input_structure i WHERE i.stru_id = :stru_id";


        $stmt = $this->conn->prepare($user_query);
        $stmt->bindParam(':stru_id', $stru_id);
        $stmt->execute();
        $inst_am = $stmt->rowCount();


                if(($stru_am+$user_am+$inst_am)>0) return true; else return false;

    }

    public function del_stru()
    {
                        $query = "DELETE FROM $this->table  
                        WHERE  `stru_id` = ? ";
                
                        $stmt = $this->conn->prepare($query);
                                $stmt->bindParam(1, $this->stru_id);
                try {
                $stmt->execute();
                        //success
                        $errTxt = "ลบข้อมูลในฐานข้อมูล";
                        $result = array(
                        'result' => true,
                        'error' => $errTxt,     
                    );
                }
                catch (PDOException $e) {
                        //error
                        $errTxt = "ไม่สามารถลบข้อมูลในฐานข้อมูลได้: user_table" . $e->getMessage();
                                $result = array(
                                'result' => false,
                                'error' => $errTxt,     
                        );

                }

                return $result;
        }

      // $source_id คือ รหัสปีงบประมาณต้นทาง $target
      public function clone_stru($source_id,$taget_id)
        {
          $source_array = array();
          $target_array = array();
          $stru_query = "SELECT * FROM $this->table d
                      WHERE d.bg_term_id = :source_id";

                $stmt = $this->conn->prepare($stru_query);
                $stmt->bindParam(':source_id', $source_id);
                $stmt->execute();
                $stru_am = $stmt->rowCount();




                if($stru_am>0) {

                  //สร้าง ID ใหม่ใส่ไว้ในฟิลด์ new_id
                    while($source_row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                          $source_row['new_id'] = uniqid('s');
                          array_push($source_array, $source_row);
                    }

                              foreach($source_array as $source) {
                                  // เก็บ master_id เก่าไว้ในตัวแปร $old_master
                                  $old_master = $source['master_id']; 
                                            foreach($source_array as $target) {
                                                  if($old_master == $target['stru_id']){
                                                      $new_master = $target['new_id'];
                                                  }
                                            } 
                                  $source['new_master_id'] = $new_master;
                                  $source['new_bg_term_id'] = $taget_id;
                                  array_push($target_array, $source);
                            
                }
                  //เตรียมข้อมูลสำหรับ Insert  into   
                  $values = "";
                  $first = 0;
                  foreach($target_array as $target) {
                      if($first == 0){
                            $values .= "('" . $target['new_id'] . "','" . $target['new_master_id']. "'," .$target['stru_index']. ",'" .$target['stru_title']. "','" .
                            $target['stru_name']. "'," .$target['active']. ",'" .$target['stru_note']. "','" .$target['new_bg_term_id']. "')";
                            $first += 1;
                          } else {
                            $values .= ",('" . $target['new_id'] . "','" . $target['new_master_id']. "'," .$target['stru_index']. ",'" .$target['stru_title']. "','" .
                            $target['stru_name']. "'," .$target['active']. ",'" .$target['stru_note']. "','" .$target['new_bg_term_id']. "')";
                            }
                  }     

                          //save To Table
                    
                          $query = "INSERT INTO $this->table (`stru_id`,`master_id`, `stru_index`,`stru_title`,`stru_name`, `active`, `stru_note`,`bg_term_id`) VALUES " . $values;
                          
                                  $stmt = $this->conn->prepare($query);

                          try {
                          $stmt->execute();
                                  //success
                                  $errTxt = "บันทึกคัดลอกข้อมูลสำเร็จแล้ว";
                                  $result = array(
                                  'result' => true,
                                  'error' => $errTxt,     
                              );
                          }
                          catch (PDOException $e) {
                                  //error
                                  $errTxt = "ไม่สามารถบันทึกข้อมูลในฐานข้อมูลได้: stru_table " . $e->getMessage();
                                          $result = array(
                                          'result' => false,
                                          'error' => $errTxt,     
                                  );

                          }

            }
                return $result;
        }


  }
  ?>